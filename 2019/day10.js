let getLocations = function(str) {
  const locations = [];
  const strLines = str.split("\n");
  strLines.forEach((line, index) => {
    const lineChars = line.split("");
    lineChars.forEach((ch, ind) => {
      if (ch == "#") {
        locations.push({ x: ind, y: index });
      }
    });
  });
  return locations;
}

let getCounts = function(loc) {
  loc.forEach((l, i) => {
     
     see = getVisible(loc, i);
console.log(see);
console.log(see.length);
if (see.length > largestNumber) {
  largestNumber = see.length;
  bestPoint = l;
}
  });
  
}

let getExterminateOrder = function(loc, i) {
  const l = loc[i];
  const see = getVisible(loc, i);
  const secondQuarter = see.filter(a => a.xDist >= 0 && a.yDist >= 0);
  const firstQuarter = see.filter(a => a.xDist >= 0 && a.yDist < 0);
  const fourthQuarter = see.filter(a => a.xDist < 0 && a.yDist < 0);
  const thirdQuarter = see.filter(a => a.xDist < 0 && a.yDist >= 0);
  if (see.length != firstQuarter.length + secondQuarter.length + thirdQuarter.length + fourthQuarter.length) throw "wong length"; 
  firstQuarter.sort((a, b) => (Math.abs(a.xDist)/Math.abs(a.yDist))-(Math.abs(b.xDist)/Math.abs(b.yDist)));
  secondQuarter.sort((b, a) => (Math.abs(a.xDist)/Math.abs(a.yDist))-(Math.abs(b.xDist)/Math.abs(b.yDist)));
  thirdQuarter.sort((a, b) => (Math.abs(a.xDist)/Math.abs(a.yDist))-(Math.abs(b.xDist)/Math.abs(b.yDist)));
  fourthQuarter.sort((b, a) => (Math.abs(a.xDist)/Math.abs(a.yDist))-(Math.abs(b.xDist)/Math.abs(b.yDist)));
  return [...firstQuarter, ...secondQuarter, ...thirdQuarter, ...fourthQuarter];

}

const getVisible = function(loc, i) {
const l = loc[i];
let see = [ ...loc ];
      see.splice(i, 1);
      see.forEach((ll, index, array) => {
        const xDist = ll.x - l.x;
        const yDist = ll.y - l.y;
         array[index] = { xDist, yDist, ...array[index] }
     });

see.forEach((ll, ii) => {
       const clash = see.filter((a, i) => (ll.xDist/ll.yDist == a.xDist/a.yDist) && ((ll.xDist<0) == (a.xDist<0) && (ll.yDist<0) == (a.yDist<0)));
       if (clash.length > 1) {
         clash.sort((a, b) => {
  if (Math.abs(a.xDist) < Math.abs(b.xDist) || Math.abs(a.yDist) < Math.abs(b.yDist)) return -1;
  else if (Math.abs(a.xDist) == Math.abs(b.xDist) && Math.abs(a.yDist) == Math.abs(b.yDist)) return 0;
  else return 1;
  a.xDist - b.xDist});
         clash.forEach((a, i) => { 
            if (i != 0) {
                 see = see.filter(aa => aa != a);
            }
          })
       }
    });
return see;
}

let l = getLocations(`.#....#.###.........#..##.###.#.....##...
...........##.......#.#...#...#..#....#..
...#....##..##.......#..........###..#...
....#....####......#..#.#........#.......
...............##..#....#...##..#...#..#.
..#....#....#..#.....#.#......#..#...#...
.....#.#....#.#...##.........#...#.......
#...##.#.#...#.......#....#........#.....
....##........#....#..........#.......#..
..##..........##.....#....#.........#....
...#..##......#..#.#.#...#...............
..#.##.........#...#.#.....#........#....
#.#.#.#......#.#...##...#.........##....#
.#....#..#.....#.#......##.##...#.......#
..#..##.....#..#.........#...##.....#..#.
##.#...#.#.#.#.#.#.........#..#...#.##...
.#.....#......##..#.#..#....#....#####...
........#...##...#.....#.......#....#.#.#
#......#..#..#.#.#....##..#......###.....
............#..#.#.#....#.....##..#......
...#.#.....#..#.......#..#.#............#
.#.#.....#..##.....#..#..............#...
.#.#....##.....#......##..#...#......#...
.......#..........#.###....#.#...##.#....
.....##.#..#.....#.#.#......#...##..#.#..
.#....#...#.#.#.......##.#.........#.#...
##.........#............#.#......#....#..
.#......#.............#.#......#.........
.......#...##........#...##......#....#..
#..#.....#.#...##.#.#......##...#.#..#...
#....##...#.#........#..........##.......
..#.#.....#.....###.#..#.........#......#
......##.#...#.#..#..#.##..............#.
.......##.#..#.#.............#..#.#......
...#....##.##..#..#..#.....#...##.#......
#....#..#.#....#...###...#.#.......#.....
.#..#...#......##.#..#..#........#....#..
..#.##.#...#......###.....#.#........##..
#.##.###.........#...##.....#..#....#.#..
..........#...#..##..#..##....#.........#
..#..#....###..........##..#...#...#..#..`);




/*.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##`);




/*.#....#.###.........#..##.###.#.....##...
...........##.......#.#...#...#..#....#..
...#....##..##.......#..........###..#...
....#....####......#..#.#........#.......
...............##..#....#...##..#...#..#.
..#....#....#..#.....#.#......#..#...#...
.....#.#....#.#...##.........#...#.......
#...##.#.#...#.......#....#........#.....
....##........#....#..........#.......#..
..##..........##.....#....#.........#....
...#..##......#..#.#.#...#...............
..#.##.........#...#.#.....#........#....
#.#.#.#......#.#...##...#.........##....#
.#....#..#.....#.#......##.##...#.......#
..#..##.....#..#.........#...##.....#..#.
##.#...#.#.#.#.#.#.........#..#...#.##...
.#.....#......##..#.#..#....#....#####...
........#...##...#.....#.......#....#.#.#
#......#..#..#.#.#....##..#......###.....
............#..#.#.#....#.....##..#......
...#.#.....#..#.......#..#.#............#
.#.#.....#..##.....#..#..............#...
.#.#....##.....#......##..#...#......#...
.......#..........#.###....#.#...##.#....
.....##.#..#.....#.#.#......#...##..#.#..
.#....#...#.#.#.......##.#.........#.#...
##.........#............#.#......#....#..
.#......#.............#.#......#.........
.......#...##........#...##......#....#..
#..#.....#.#...##.#.#......##...#.#..#...
#....##...#.#........#..........##.......
..#.#.....#.....###.#..#.........#......#
......##.#...#.#..#..#.##..............#.
.......##.#..#.#.............#..#.#......
...#....##.##..#..#..#.....#...##.#......
#....#..#.#....#...###...#.#.......#.....
.#..#...#......##.#..#..#........#....#..
..#.##.#...#......###.....#.#........##..
#.##.###.........#...##.....#..#....#.#..
..........#...#..##..#..##....#.........#
..#..#....###..........##..#...#...#..#..`);





/* .#....#.###.........#..##.###.#.....##...
...........##.......#.#...#...#..#....#..
...#....##..##.......#..........###..#...
....#....####......#..#.#........#.......
...............##..#....#...##..#...#..#.
..#....#....#..#.....#.#......#..#...#...
.....#.#....#.#...##.........#...#.......
#...##.#.#...#.......#....#........#.....
....##........#....#..........#.......#..
..##..........##.....#....#.........#....
...#..##......#..#.#.#...#...............
..#.##.........#...#.#.....#........#....
#.#.#.#......#.#...##...#.........##....#
.#....#..#.....#.#......##.##...#.......#
..#..##.....#..#.........#...##.....#..#.
##.#...#.#.#.#.#.#.........#..#...#.##...
.#.....#......##..#.#..#....#....#####...
........#...##...#.....#.......#....#.#.#
#......#..#..#.#.#....##..#......###.....
............#..#.#.#....#.....##..#......
...#.#.....#..#.......#..#.#............#
.#.#.....#..##.....#..#..............#...
.#.#....##.....#......##..#...#......#...
.......#..........#.###....#.#...##.#....
.....##.#..#.....#.#.#......#...##..#.#..
.#....#...#.#.#.......##.#.........#.#...
##.........#............#.#......#....#..
.#......#.............#.#......#.........
.......#...##........#...##......#....#..
#..#.....#.#...##.#.#......##...#.#..#...
#....##...#.#........#..........##.......
..#.#.....#.....###.#..#.........#......#
......##.#...#.#..#..#.##..............#.
.......##.#..#.#.............#..#.#......
...#....##.##..#..#..#.....#...##.#......
#....#..#.#....#...###...#.#.......#.....
.#..#...#......##.#..#..#........#....#..
..#.##.#...#......###.....#.#........##..
#.##.###.........#...##.....#..#....#.#..
..........#...#..##..#..##....#.........#
..#..#....###..........##..#...#...#..#..`);




/*.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##`);



/*.#..#..###
####.###.#
....###.#.
..###.##.#
##.##.#.#.
....###..#
..#.#..#.#
#..#.#.###
.##...##.#
.....#.#..`);



/*#.#...#.#.
.###....#.
.#....#...
##.#.#.#.#
....#.#.#.
.##..###.#
..#...##..
..##....##
......#...
.####.###.`);









/*......#.#.
#..#.#....
..#######.
.#.#.###..
.#..#.....
..#....#.#
#..#....#.
.##.#..###
##...#..#.
.#....####`);


/*
.#..#
.....
#####
....#
...##`);
*/
let largestNumber = 0;
let bestPoint = null;

//console.log(l);
//let k = getCounts(l);
//console.log(k);


//console.log(largestNumber);
//console.log(bestPoint);

const o = l.findIndex(a => a.x == 28 && a.y == 29);
const oo = getExterminateOrder(l, o);
console.log(oo.length);
console.log(oo[199]);

